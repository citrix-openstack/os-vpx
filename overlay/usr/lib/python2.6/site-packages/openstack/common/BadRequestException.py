from openstack.common.ServiceFaultException import ServiceFaultException

class BadRequestException(ServiceFaultException):

    def __init__(self, message, detail=None, errorMessages=None):
        ServiceFaultException.__init__(self, 400, message)
        self.detail = detail
        self.validationErrors = errorMessages

   

    def get_as_xml(self):

        output = "<badRequest xmlns=\"" + self.xml_namespace_uri + "\" code=\"" + str(self.statuscode) + "\">"

        output += "<message>" + self.message + "</message>"

        if self.detail:  
            output += "<details>" +  self.detail + "</details>"

            if self.validationErrors:
                output += "<validationErrors>"

                if isinstance(self.validationErrors, list):
 
                    for validationError in self.validationErrors:
                        output += "<message>" + validationError + "</message>"
                else:
                    output += "<message>" + self.validationErrors + "</message>"  

                output += "</validationErrors>"

        output += "</badRequest>"

        return output


    def get_as_json(self):

        output = "{" 
        output +=      "\"badRequest\"" + ":"
        output +=                "{"
        output +=                    "\"code\"" + ":" + "\"" + str(self.statuscode) + "\","
        output +=                    "\"message\"" + ":" + "\"" + self.message + "\""

        if self.detail:
            output +=                                                        ","
            output +=                "\"details\"" + ":" + "\"" + self.detail + "\""

            if self.validationErrors:
                output +=                                                     ","
                output +=            "\"validationErrors\"" + ":"
                output +=                                    "["

                if isinstance(self.validationErrors, list):

                    first = True

                    for validationError in self.validationErrors:
                        if not first:
                            output +=                                 ","    
                        output +=                                   "{"
                        output +=                                       "\"message\"" + ":" + "\"" + validationError + "\""
                        output +=                                   "}"
                else:
                    output +=                                       "{"
                    output +=                                           "\"message\"" + ":" + "\"" + self.validationErrors + "\""
                    output +=                                       "}"
           
                output +=                                    "]"               
      
        output +=                "}"
        output += "}" 

        return output
