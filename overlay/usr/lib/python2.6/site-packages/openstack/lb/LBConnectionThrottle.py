from openstack.lb.LBConnectionThrottleState import LBConnectionThrottleState
from openstack.lb.Utils import Utils

class LBConnectionThrottle(object):


    def __init__(self, lbservice, lbresource=None):
        if not lbresource:
            self.lbresource = self
            Utils.init(lbservice)
        else:
            self.lbresource = lbresource 

        self.lbservice = lbservice
        self.logger = self.lbservice.logger  


    def GetStateObject(self):
        return LBConnectionThrottleState(self.lbresource) 

    def Get(loadBalancerId): raise AssertionError()
        
    def Set(loadBalancerId, body): raise AssertionError()

    def Remove(loadBalancerId): raise AssertionError()

        
    def validate_connectionthrottle_object_for_add(self, connectionthrottle):
     
        """ XXX - Do checks here on connectionlogging attributes for ADD operation """

        return None


    def validate_connectionthrottle_object_for_update(self, connectionthrottle):

        """ XXX - Do checks here on connectionlogging attributes for UPDATE operation """

        return None

        

