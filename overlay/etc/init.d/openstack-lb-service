#!/bin/sh

### BEGIN INIT INFO
# Provides:          openstack-lb-service
# Default-Stop:      0 1 6
# Short-Description: OpenStack Load Balancing Service
# Description:       OpenStack Load Balancing Service Prototype using NetScaler and Rackspace Cloud Balancing API
### END INIT INFO

# openstack-lb-service: OpenStack LBService
#
# chkconfig: - 99 99
# description: OpenStack Load Balancing Service Prototype using NetScaler and Rackspace Cloud Balancing API

. /etc/rc.d/init.d/functions

user="root"
name="lbservice"
pidfile="/var/run/glance/$name.pid"
lockfile="/var/lock/subsys/$name"

[ -e "/etc/sysconfig/openstack-lb-service" ] && . "/etc/sysconfig/openstack-lb-service"

apply_config() {
  # Update config glance file
  CONF_FILE=/etc/lbservice/lbservice.conf
  for opt in $*
  do
    flag=${opt%=*}
    case "$flag" in
       --host|--port|--user|--password)
           key=${opt%=*}
           val=${opt#*=}
           sec="citrix-netscaler"
           ;;
       --ips)
           key=${opt%=*}
           val=${opt#*=}
           sec="PUBLIC"
           ;;
    esac
    /usr/local/bin/geppetto/set-config-param $CONF_FILE ${key:2} $val $sec
  done
  WARNING="# This file is auto-generated by Geppetto, please do not edit!"
  echo "$WARNING" | cat - $CONF_FILE > /tmp/out && mv /tmp/out $CONF_FILE
}

start() {
    apply_config $OPTIONS
    echo -n "Starting $name: "
    daemonize -p "$pidfile" -u "$user" -l "$lockfile" \
              -a -e "/var/log/$name.log" "/usr/bin/$name"
    retval=$?
    [ $retval -eq 0 ] && touch "$lockfile"
    [ $retval -eq 0 ] && success || failure
    echo
    return $retval
}

stop() {
    echo -n "Stopping $name: "
    killproc -p "$pidfile" "/usr/bin/$name"
    retval=$?
    rm -f "$lockfile"
    echo
    return $retval
}

restart() {
    stop
    start
}

rh_status() {
    status -p "$pidfile" "/usr/bin/$name"
}

rh_status_q() {
    rh_status &> /dev/null
}

case "$1" in
    start)
        rh_status_q && exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    reload)
        ;;
    status)
        rh_status
        ;;
    condrestart|try-restart)
        rh_status_q || exit 0
        restart
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart}"
        exit 2
esac
exit $?
