#!/usr/bin/env python2.6

#
# Exit codes:
#   0: OK
#   1: Miscellaneous error
#   2: Connection refused
#   3: Authentication failed
#   4: xapi password unconfigured
#

import socket
import sys

import XenAPI

import os_vpx


try:
    session = os_vpx.login()
    host_ref = session.xenapi.session.get_this_host(session.handle)
    vi = session.xenapi.host.get_software_version(host_ref)
    print \
'''Product: %(product_brand)s %(product_version)s.
Build: %(build_number)s.
Build date: %(date)s.
Network backend: %(network_backend)s.
Xen: %(xen)s.
xapi: %(xapi)s.
Domain 0 Linux: %(linux)s.''' % vi
    for k in ['product_brand', 'product_version', 'build_number', 'date',
              'network_backend', 'xen', 'linux', 'xapi', 'hostname', 'hg_id',
              'package-linux', 'xencenter_min', 'xencenter_max',
              'product_version_text_short', 'product_version_text', 'dbv']:
        if k in vi:
            del vi[k]
    print 'Supplemental packs:'
    for k, v in vi.items():
        if ':' in k:
            print '  %(k)s: %(v)s' % locals()
            del vi[k]
    if vi:
        print 'Misc: %s' % str(vi)
except os_vpx.XapiPasswordUnconfigured:
    print >>sys.stderr, 'Error: xapi password unconfigured.'
    sys.exit(4)
except XenAPI.Failure, exn:
    if exn.details[0] == 'SESSION_AUTHENTICATION_FAILED':
        print >>sys.stderr, 'Error: authentication to xapi failed.'
        sys.exit(3)
    else:
        print >>sys.stderr, exn
        sys.exit(1)
except socket.error, exn:
    if exn.errno == 111:
        print >>sys.stderr, \
              'Error: connection to %s refused.' % os_vpx.connection_url()
        sys.exit(2)
    else:
        print >>sys.stderr, exn
        sys.exit(1)
